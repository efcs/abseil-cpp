#
# Copyright 2017 The Abseil Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

file(GLOB BASE_PUBLIC_HEADERS "*.h")
file(GLOB BASE_INTERNAL_HEADERS "internal/*.h")

# base main library
abseil_library(base
    internal/cycleclock.cc
    internal/raw_logging.cc
    internal/spinlock.cc
    internal/sysinfo.cc
    internal/thread_identity.cc
    internal/unscaledcycleclock.cc
    internal/spinlock_wait.cc
    internal/low_level_alloc.cc
    internal/malloc_hook.cc
    dynamic_annotations.cc
  ADDITIONAL_HEADERS
    ${BASE_PUBLIC_HEADERS}
    ${BASE_INTERNAL_HEADERS}
)


# malloc extension library
abseil_library(malloc_extension
  internal/malloc_extension.cc
LINK_LIBS
  base
)

# throw delegate library
abseil_library(throw_delegate
  internal/throw_delegate.cc
)


install(FILES ${BASE_PUBLIC_HEADERS}
        DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}/absl/base)
install(FILES ${BASE_INTERNAL_HEADERS}
        DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}/absl/base/internal)

#
## TESTS
#

# call once test
set(TEST_ON OFF)

abseil_test(call_once_test
  call_once_test.cc
LINK_LIBS
  base
  synchronization
)

if (TEST_ON)
# test bit_cast_test
set(BIT_CAST_TEST_SRC "bit_cast_test.cc")

abseil_test(bit_cast_test)

abseil_test(throw_delegate_test
    throw_delegate_test.cc
LINK_LIBS
    base
    throw_delegate
)


# test invoke_test
set(INVOKE_TEST_SRC "invoke_test.cc")
set(INVOKE_TEST_PUBLIC_LIBRARIES strings)

abseil_test(invoke_test)


# test spinlock_test_common
set(SPINLOCK_TEST_COMMON_SRC "spinlock_test_common.cc")
set(SPINLOCK_TEST_COMMON_PUBLIC_LIBRARIES base synchronization)

abseil_test(spinlock_test_common)


# test spinlock_test
set(SPINLOCK_TEST_SRC "spinlock_test_common.cc")
set(SPINLOCK_TEST_PUBLIC_LIBRARIES base synchronization)

abseil_test(spinlock_test)


# test endian_test
set(ENDIAN_TEST_SRC "internal/endian_test.cc")

abseil_test(endian_test)


# test config_test
set(CONFIG_TEST_SRC "config_test.cc")
set(CONFIG_TEST_PUBLIC_LIBRARIES base synchronization)
abseil_test(config_test)


# test raw_logging_test
set(RAW_LOGGING_TEST_SRC "raw_logging_test.cc")
set(RAW_LOGGING_TEST_PUBLIC_LIBRARIES base)

abseil_test(raw_logging_test)


# test sysinfo_test
set(SYSINFO_TEST_SRC "internal/sysinfo_test.cc")
set(SYSINFO_TEST_PUBLIC_LIBRARIES base synchronization)

abseil_test(sysinfo_test)


# test low_level_alloc_test
set(LOW_LEVEL_ALLOC_TEST_SRC "internal/low_level_alloc_test.cc")
set(LOW_LEVEL_ALLOC_TEST_PUBLIC_LIBRARIES base)

abseil_test(low_level_alloc_test)


# test thread_identity_test
set(THREAD_IDENTITY_TEST_SRC "internal/thread_identity_test.cc")
set(THREAD_IDENTITY_TEST_PUBLIC_LIBRARIES base synchronization)

abseil_test(thread_identity_test)


# test malloc_extension_system_malloc_test
set(MALLOC_EXTENSION_SYSTEM_MALLOC_TEST_SRC "internal/malloc_extension_test.cc")
set(MALLOC_EXTENSION_SYSTEM_MALLOC_TEST_PUBLIC_LIBRARIES base malloc_extension)
set(MALLOC_EXTENSION_SYSTEM_MALLOC_TEST_PRIVATE_COMPILE_FLAGS "-DABSL_MALLOC_EXTENSION_TEST_ALLOW_MISSING_EXTENSION=1")

abseil_test(malloc_extension_system_malloc_test)

endif()


